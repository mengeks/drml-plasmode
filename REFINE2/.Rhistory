123
install.packages("zoo")
### data analysis file to share with workshop attendees ###
install.packages("sandwich"); install.packages("geepack")
### warning: this next line removes almost everything in your working memory/environment
rm(list = ls())
### load a package
library(sandwich); library(geepack)
source("https://raw.githubusercontent.com/dalmiral/mHealthModeration/master/xgeepack.R")
### read in a simulated MRT data set
## id:    unique person id; 30 individuals
## time:  30 decision points
## base:  continuous baseline variable
## St:    binary time-varying covariate; an individuals 'state'
## a:     binary variable indicating the time-varying treatment (e.g., push vs no push)
## y:     proximal outcome y_t+1, immediately following the decision point
## note:  randomizations in this simulated MRT were not dependent on an "availability" measure
d <- read.table(file="http://www-personal.umich.edu/~dalmiral/software/mHealth/fakeMRTdata.txt",sep=",")
### Start Quiz 4 ###
### run the following code to obtain some simple descriptive statistics of a simulated data set
dim(d)      ## this shows the dimension of the data set is 900 x 6; i.e., 30 individuals at 30 time points, with 6 variables
summary(d)  ## outputs a 6-number summary for each variable in the data set
table( d[,c("a","time")] )  ## distribution of the push message (a=1) vs not (a=0) at each time point
### QUIZ QUESTION: WHAT IS THE RANDOMIZATION PROBABILITY IN THIS SIMULATED DATA SET?
d
### Run a regression that examines whether St moderates the proximal effect. ###
fit3 <- geeglm( y ~
base + St + ## this is the denoising part
a + a:St,   ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT3:\n"); estimate(fit3); cat("\nFIT3 Secondary Aim Test of (a,St:a)\n"); estimate(fit3, combos=t(matrix( c(0,0,0,1,0,0,0,0,0,1) ,ncol=2)), omnibus=TRUE); par(mfrow=c(1,1)); plot(d$y~d$time,pch="",ylim=c(-1,1),ylab="Proximal Effect (95% CI)",xlab="Time",main="Proximal Effect by State(t)"); ces1  <- fit3$coefficients[4] + fit3$coefficients[5];  vvs1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] + 2*fit3$geese$vbeta[4,5] ); cesn1 <- fit3$coefficients[4] - fit3$coefficients[5]; vvsn1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] - 2*fit3$geese$vbeta[4,5] ); abline(h=ces1, col="black"); abline(h=ces1 + c(-1,1)*1.96*vvs1, col="black",lty=2); text(x=5,y=ces1+.1,label="State(t) = 1"); abline(h=cesn1, col="red"); abline(h=cesn1 + c(-1,1)*1.96*vvsn1, col="red", lty=3); text(x=5,y=cesn1+.1,label="State(t) = -1")
### QUIZ QUESTION: IS THERE EVIDENCE THAT St MODERATES THE PROXIMAL EFFECT?
### Run a regression that examines whether St moderates the proximal effect. ###
fit3 <- geeglm( y ~
base + St + ## this is the denoising part
a + a:St,   ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT3:\n"); estimate(fit3); cat("\nFIT3 Secondary Aim Test of (a,St:a)\n"); estimate(fit3, combos=t(matrix( c(0,0,0,1,0,0,0,0,0,1) ,ncol=2)), omnibus=TRUE); par(mfrow=c(1,1)); plot(d$y~d$time,pch="",ylim=c(-1,1),ylab="Proximal Effect (95% CI)",xlab="Time",main="Proximal Effect by State(t)"); ces1  <- fit3$coefficients[4] + fit3$coefficients[5];  vvs1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] + 2*fit3$geese$vbeta[4,5] ); cesn1 <- fit3$coefficients[4] - fit3$coefficients[5]; vvsn1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] - 2*fit3$geese$vbeta[4,5] ); abline(h=ces1, col="black"); abline(h=ces1 + c(-1,1)*1.96*vvs1, col="black",lty=2); text(x=5,y=ces1+.1,label="State(t) = 1"); abline(h=cesn1, col="red"); abline(h=cesn1 + c(-1,1)*1.96*vvsn1, col="red", lty=3); text(x=5,y=cesn1+.1,label="State(t) = -1")
### QUIZ QUESTION: IS THERE EVIDENCE THAT St MODERATES THE PROXIMAL EFFECT?
par(mfrow=c(1,2))
plot(y~time, col=a+1,   data=d[d$St==1 ,],
ylab="Y(t+1)", xlab="Time (t)", ylim=c(-2,9), main="State(t) =  1", pch=20)
legend("topright", legend=c("no push","push"), col=c(1,2), pch=20)
plot(y~time, col=a+1,   data=d[d$St==-1,],
ylab="Y(t+1)", xlab="Time (t)" ,ylim=c(-2,9), main="State(t) = -1", pch=20)
legend("topright", legend=c("no push","push"), col=c(1,2), pch=20)
### QUIZ QUESTION: DO YOU SEE ANY TRENDS OR PATTERNS OR APPARENT EFFECTS?
par(mfrow=c(1,2))
plot(y~time, col=a+1,   data=d[d$St==1 ,],
ylab="Y(t+1)", xlab="Time (t)", ylim=c(-2,9), main="State(t) =  1", pch=20)
legend("topright", legend=c("no push","push"), col=c(1,2), pch=20)
plot(y~time, col=a+1,   data=d[d$St==-1,],
ylab="Y(t+1)", xlab="Time (t)" ,ylim=c(-2,9), main="State(t) = -1", pch=20)
legend("topright", legend=c("no push","push"), col=c(1,2), pch=20)
### QUIZ QUESTION: DO YOU SEE ANY TRENDS OR PATTERNS OR APPARENT EFFECTS?
### Run a regression that examines the proximal effect of a on Y_t+1. ###
fit1 <- geeglm( y ~
base + St + ## this is the denoising part
a,          ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT1:\n"); estimate(fit1); par(mfrow=c(1,1)); plot(d$y~d$time,pch="",ylim=c(-1,1),ylab="Proximal Effect (95% CI)",xlab="Time",main="Proximal Effect"); abline(h=fit1$coefficients[4]); abline(h=fit1$coefficients[4]+c(-1,+1)*1.96*sqrt(fit1$geese$vbeta[4,4]),lty=3)
### QUIZ QUESTION: IS THERE EVIDENCE OF AN AVERAGE PROXIMAL EFFECT, WHERE 'AVERAGE' HERE IS OVER TIME AND ALL OTHER COVARIATES?
fit2 <- geeglm( y ~
base + St + time + ## this is the denoising part
a + a:time,        ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT2:\n"); estimate(fit2); cat("\nFIT2 Primary Aim Test of (a,time:a)\n"); estimate(fit2, combos=t(matrix( c(0,0,0,0,1,0,0,0,0,0,0,1) ,ncol=2)), omnibus=TRUE); plot(d$y~d$time,pch="",ylim=c(-1,1),ylab="Proximal Effect (95% CI)",xlab="Time",main="Proximal Effect by Time"); cfint <- fit2$coefficients[5]; cfslope <- fit2$coefficients[6]; abline(a=cfint,b=cfslope); xx <- 0:31; ce <- cfint+xx*cfslope; vv1 <- sqrt(fit2$geese$vbeta[5,5] + (xx^2)*fit2$geese$vbeta[6,6] + 2*xx*fit2$geese$vbeta[5,6]); lines(xx,ce+1.96*vv1,lty=3); lines(xx,ce-1.96*vv1,lty=3)
### QUIZ QUESTION: IS THERE EVIDENCE THAT THE AVERAGE PROXIMAL EFFECT VARIES WITH TIME?
### Run a regression that examines whether St moderates the proximal effect. ###
fit3 <- geeglm( y ~
base + St + ## this is the denoising part
a + a:St,   ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT3:\n"); estimate(fit3); cat("\nFIT3 Secondary Aim Test of (a,St:a)\n"); estimate(fit3, combos=t(matrix( c(0,0,0,1,0,0,0,0,0,1) ,ncol=2)), omnibus=TRUE); par(mfrow=c(1,1)); plot(d$y~d$time,pch="",ylim=c(-1,1),ylab="Proximal Effect (95% CI)",xlab="Time",main="Proximal Effect by State(t)"); ces1  <- fit3$coefficients[4] + fit3$coefficients[5];  vvs1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] + 2*fit3$geese$vbeta[4,5] ); cesn1 <- fit3$coefficients[4] - fit3$coefficients[5]; vvsn1 <- sqrt(fit3$geese$vbeta[4,4] + fit3$geese$vbeta[5,5] - 2*fit3$geese$vbeta[4,5] ); abline(h=ces1, col="black"); abline(h=ces1 + c(-1,1)*1.96*vvs1, col="black",lty=2); text(x=5,y=ces1+.1,label="State(t) = 1"); abline(h=cesn1, col="red"); abline(h=cesn1 + c(-1,1)*1.96*vvsn1, col="red", lty=3); text(x=5,y=cesn1+.1,label="State(t) = -1")
### QUIZ QUESTION: IS THERE EVIDENCE THAT St MODERATES THE PROXIMAL EFFECT?
d$St.2 <-(d$St+1)/2
fit3 <- geeglm( y ~
base + St.2 + ## this is the denoising part
a + a:St.2,   ## this is the causal part
id=id,
std.err="san.se", corstr = "independence",
data=d)
cat("\nFIT3:\n"); estimate(fit3);
library(shiny)
shinyApp(server = server, ui = ui)
setwd("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
shinyApp(server = server, ui = ui)
getwd()
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
expForm
expForm
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
as.formula("A1 ~ VAR_1")
as.formula("A1 ~ 1+VAR_1")
as.character(as.formula("A1 ~ VAR_1")[[2]])
as.character(as.formula("Y5 ~ 1 +A1 + VAR_1")[[2]])
as.formula("Y5 ~ 1 +A1 + VAR_1")[[2]]
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
i <- 1
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
library(shiny)
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
?read.csv
?read.csv
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
plas_org
plas_org <- read.csv(file = path(), header=TRUE, stringsAsFactors=FALSE)
as.formula("A ~ 1+VAR_1 + VAR_2")
as.formula("A ~ 1+VAR_1 + VAR_2")[[1]]
as.formula("A ~ 1+VAR_1 + VAR_2")[[2]]
as.formula("A ~ 1+VAR_1 + VAR_2")[[3]]
as.formula("A ~ 1+VAR_1 + VAR_2")[[4]]
model.matrix(object = as.formula(outForm))
model.matrix(object = as.formula("A ~ 1+VAR_1 + VAR_2"))
all.vars("A ~ 1+VAR_1 + VAR_2")
all.vars("A ~ 1+VAR_1 + VAR_2")[1]
?"A ~ 1+VAR_1 + VAR_2"
?all.vars
all.vars(as.formula("A ~ 1+VAR_1 + VAR_2"))
all.vars(as.formula("A ~ 1+VAR_1 *VAR_2"))
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
all.vars(as.formula("A ~ 1+VAR_1 *VAR_2"))
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
c(1,2,3) %in% c(2,3)
prod(c(1,2,3) %in% c(2,3))
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
install.packages("RAmazonS3", repos = "http://www.omegahat.net/R")
library(RAmazonS3)
?addFile
library(rsconnect)
fluidPage(
titlePanel("T-PEE: Tool for Pratical Evaluation of Effect Estimation"),
actionButton("run", "Run"),
numericInput("obs", "Number of Plasmode Samples:", 3, min = 2, max = 1000),
textInput("path", "Path of the data","./plas_data.csv"),
sidebarLayout(
sidebarPanel(h4("Models for simulation"),
textInput(inputId = "expForm",
label = "PS Model",
value = "A ~ 1+VAR_1 + VAR_2"),
textInput(inputId = "outForm",
label = "Outcome Model",
value = "Y ~ 1 +A + VAR_1 + VAR_2"),
h4("Models for estimation"),
textInput(inputId = "expForm.est",
label = "PS Model",
value = "A ~ 1+VAR_1 + VAR_2"),
textInput(inputId = "outForm.est",
label = "Outcome Model",
value = "Y ~ 1 +A + VAR_1 + VAR_2"),
h4("Estimation Method"),
selectInput('mtd', 'Estimation Method', c("IPW","GComp","TMLE","AIPW","DCTMLE","DCAIPW"),
selected = "IPW")
# sliderInput('sampleSize', 'Sample Size', min=1, max=nrow(dataset),
#             value=min(1000, nrow(dataset)), step=500, round=0),
#
# selectInput('x', 'X', names(dataset)),
# selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
# selectInput('color', 'Color', c('None', names(dataset))),
#
# checkboxInput('jitter', 'Jitter'),
# checkboxInput('smooth', 'Smooth'),
#
# selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
# selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
),
mainPanel(
textOutput("exp.Form"),textOutput("out.Form"),textOutput("exp.Form.est"),textOutput("out.Form.est"),
plotOutput("plot"),
htmlOutput("res.text.1"),htmlOutput("res.text.2"),htmlOutput("res.text.3")
)
),
fluidRow(
column(12,
tableOutput('table')
)
)
)
library(rsconnect)
rsconnect::setAccountInfo(name='xmeng',
token='74F423BFAE75D98A231EE36EC22DD673',
secret='JXCi5xXLMkjSv8UifAEINkIm9m2N8akxRGn8exiY')
rsconnect::setAccountInfo(name='xmeng',
token='74F423BFAE75D98A231EE36EC22DD673',
secret='JXCi5xXLMkjSv8UifAEINkIm9m2N8akxRGn8exiY')
deployApp()
deployApp()
deployApp()
Y
deployApp()
shiny::runApp()
rsconnect::configureApp("shinyapp", size="xxlarge")
rsconnect::configureApp("shinyapp", size="large")
# library(randomForest)
library(speedglm)
deployApp()
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
library(shiny)
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
rsconnect::configureApp("shinyapp", size="xxlarge")
deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
rsconnect::deployApp()
?polspline
?make_learner
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
rsconnect::deployApp()
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
nzchar(system.file(package = "ggplot2"))
nzchar(system.file(package = c("ggplot2", "dplyr")))
lapply(c("ggplot2", "dplyr"), function(x) {nzchar(system.file(package = x))})
sapply(c("ggplot2", "dplyr"), function(x) {nzchar(system.file(package = x))})
# sapply(c("ggplot2", "dplyr"), function(x) {nzchar(system.file(package = x))})
(.packages())
require("xtable123")
list.of.packages <- c("mgcv","nlme","glm2","polspline",  "doRNG","doParallel",
"SuperLearner","gam","foreach","splines","nnls",
"Plasmode","table1","readxl","haven","dplyr","purrr","readr","tidyr",
"tibble","tidyverse","ggplot2")
install.packages(list.of.packages[sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})])
install.packages(list.of.packages[which(sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})==F)])
sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})
sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})==F
list.of.packages[which(
sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})==F
)]
install.packages(list.of.packages[which(
sapply(list.of.packages, function(x) {nzchar(system.file(package = x))})==F
)])
install.packages("SuperLearner")
install.packages("SuperLearner")
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/ShinyApp")
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/SMILE4")
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/SMILE4")
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/REFINE2")
shiny::runApp("~/Desktop/HuangGroup/cvtmle_plasmode/Code/REFINE2")
shiny::runApp("~/Desktop/HuangGroup/REFINE2")
shiny::runApp("~/Desktop/HuangGroup/REFINE2")
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
here::here()
shiny::runApp(here::here("REFINE2"))
shiny::runApp(here::here("REFINE2"))
shiny::runApp("~/Desktop/drml-plasmode/REFINE2")
# Set your folder path
folder_path <- "~/Desktop/drml-plasmode/REFINE2"
# List all .R files
r_files <- list.files(folder_path, pattern = "\\.R$", full.names = TRUE)
r_files
# Output file path
output_file <- file.path(folder_path, "All_R_Code.txt")
# Write content
cat("", file = output_file)  # reset file
for (file in r_files) {
cat("### File:", basename(file), "\n", file = output_file, append = TRUE)
cat(readLines(file), sep = "\n", file = output_file, append = TRUE)
cat("\n\n", file = output_file, append = TRUE)
}
